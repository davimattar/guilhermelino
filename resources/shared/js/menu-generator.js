$(function () {
  'use strict'

  /**
   * Generates a bootstrap navbar-menu, searching for elements with
   * [data-module="container"] and [data-menu-name] which is not empty, then
   * creates a menu entries with an [data-module="menu-item"] attribute
   *
   * Usage:
   *     Have a bootstrap menu using ul.nav.navbar-nav, where it will be
   *     appended li's to be the menu entries. To generate the menu entries:
   *      $.fn.generateDynamicMenu()
   *
   */
  $.fn.generateDynamicMenu = function(){

    // Deletes all dynamic current menu entries
    $('[data-module="menu-item"]').remove();

    var menuWrapper = $('.nav.navbar-nav');
    var currentPageMenuEntry = $(menuWrapper).find('li[current-page="true"]');

    var appendAfterEntry = currentPageMenuEntry.length === 0 ? $(menuWrapper).prepend('<span dynamic-menu-placeholder></span>').find('span') : currentPageMenuEntry;

    // Creates a menu entry for each container using it's name
    $('[data-module="container"][id]:not([data-menu-name=""])').each(function(index){

      // Enables smooth scroll and scrollspy on link to current page
      // without creating a new entry as it was already generated by the backend
      if (index === 0 && currentPageMenuEntry.length > 0){
        var anchorCurrentPage = $(currentPageMenuEntry).children('a');
        anchorCurrentPage.attr('href', '#' + $(this).attr('id'));
        anchorCurrentPage.click(function(){
          return enableSmoothScroll(this);
        });
        return;
      }

      var targetScrollId = $(this).attr('id');
      var targetScrollName = $(this).attr('data-menu-name');

      $(appendAfterEntry).after('<li smooth-scroll data-module="menu-item"></li>');
      var newMenuItem = menuWrapper.find('li[smooth-scroll]').last();

      newMenuItem.append('<a data-toggle="collapse" data-collapse-target=".navbar-collapse.in"></a>');
      var itemAnchor = newMenuItem.find('a');

      itemAnchor.attr('href', '#' + targetScrollId);
      itemAnchor.text(targetScrollName);

      itemAnchor.click(function(e) {
        var targetElement = $(this).attr('data-collapse-target');
        if ($.isFunction($(targetElement).collapse)){
          if ($(targetElement).length > 0){
            $(targetElement).collapse('toggle');
          }
        } else {
          console.warn('$.collapse is not a function')
        }
        return enableSmoothScroll(this);
      });

      appendAfterEntry = newMenuItem;
    });

    // Refreshes the scrollspy
    if ($.isFunction($().scrollspy)){
      $('body').scrollspy('refresh');
    } else {
      console.warn('$.scrollspy is not a function');
    }

    $(menuWrapper).find('span[dynamic-menu-placeholder]').remove();
  }

  // Usage: return this method on an element's .click() event
  function enableSmoothScroll(anchorEl){
    if (window.location.pathname.replace(/^\//,'') === anchorEl.pathname.replace(/^\//,'') &&
      window.location.hostname === anchorEl.hostname) {

      var target = $(anchorEl.hash);
      target = target.length ? target : $('[name=' + anchorEl.hash.slice(1) +']');
      if (target.length) {
        $('html,body').animate({
          scrollTop: target.offset().top - 40
        }, 900);
        return false;
      }
    }
  }

  $.fn.generateDynamicMenu();
});

// Enables Bootstrap's Scrollspy
$('body').scrollspy({
  target: '.navbar',
  offset: 80
});

$(function () {
  'use strict'

  // Change transparency of navbar to solid color on mouse scroll down
  $(window).bind('scroll', function() {
    activateNavbar();
  });

  // If top of visible area is greater than the threshold it removes transparency (adding the .on class)
  // Cases:
  //  - Page is too small so user cant scroll down so navbar is never activated
  //  - Page is big enough so user can scroll down
  function activateNavbar(){
    // Activates the navbar before it goes over the first content module
    var firstContentModuleDistanceFromTop = $('[data-module^="content"]:first').offset().top - $('.navbar').height();
    var navHeightThreshold = firstContentModuleDistanceFromTop;
    // If there is not enough space to scroll the page and trigger activation on scroll, keeps the navbar activated
    if ($('.page').height() < ($(window).height() + firstContentModuleDistanceFromTop)){
      navHeightThreshold = 0;
    }
    if ($(window).scrollTop() >= navHeightThreshold) {
      $('.navbar').addClass('on');
    } else {
      $('.navbar').removeClass('on');
    }
  }

  activateNavbar();
});
